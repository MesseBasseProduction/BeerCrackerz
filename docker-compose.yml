version: "3.9"

services:
  nginx:
    container_name: ${NGINX_NAME}
    build:
      context: .
      dockerfile: ./.conf/development/nginx/Dockerfile
    ports:
      - ${SERVER_HTTP_PORT}:${SERVER_HTTP_PORT}
    environment:
      SERVER_HTTP_PORT: ${SERVER_HTTP_PORT}
      BACKEND_NAME: ${BACKEND_NAME}
      BACKEND_PORT: ${BACKEND_PORT}
    volumes:
      - ./static:/vol/static
      - bc_media:/vol/media
    depends_on:
      - backend
  backend:
    container_name: ${BACKEND_NAME}
    build:
      context: .
      dockerfile: ./.conf/development/back/Dockerfile
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
      SERVER_URL: http://${SERVER_HOST}:${SERVER_HTTP_PORT}
      SECRET_KEY: ${BACKEND_SECRET_KEY}
      DEBUG: ${BACKEND_DEBUG}
      ALLOWED_HOSTS: ${BACKEND_ALLOWED_HOSTS}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      BACKEND_USE_EMAIL_FILE_SYSTEM: ${BACKEND_USE_EMAIL_FILE_SYSTEM}
      MAILJET_API_KEY: ${MAILJET_API_KEY}
      MAILJET_API_SECRET: ${MAILJET_API_SECRET}
    volumes:
      - ./back:/back
      - bc_media:/vol/media
    depends_on:
      - db
  db:
    image: postgres:${DB_POSTGRES_VERSION}
    container_name: ${DB_HOST}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - bc_db:/var/lib/postgresql/data
  adminer:
    container_name: ${DB_ADMINER_NAME}
    image: adminer
    ports:
      - ${DB_ADMINER_PORT}:${DB_ADMINER_CONTAINER_PORT}
volumes:
  bc_db:
    name: bc_db
  bc_media:
    name: bc_media
